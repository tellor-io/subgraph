// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class Contract__getNewCurrentVariablesResult {
  value0: Bytes;
  value1: Array<BigInt>;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: Bytes,
    value1: Array<BigInt>,
    value2: BigInt,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromFixedBytes(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigIntArray(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class Contract__getNewVariablesOnDeckResult {
  value0: Array<BigInt>;
  value1: Array<BigInt>;

  constructor(value0: Array<BigInt>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigIntArray(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  approve(_spender: Address, _amount: BigInt): boolean {
    let result = super.call("approve", [
      EthereumValue.fromAddress(_spender),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(_spender: Address, _amount: BigInt): CallResult<boolean> {
    let result = super.tryCall("approve", [
      EthereumValue.fromAddress(_spender),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  transfer(_to: Address, _amount: BigInt): boolean {
    let result = super.call("transfer", [
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(_to: Address, _amount: BigInt): CallResult<boolean> {
    let result = super.tryCall("transfer", [
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(_from: Address, _to: Address, _amount: BigInt): boolean {
    let result = super.call("transferFrom", [
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);

    return result[0].toBoolean();
  }

  try_transferFrom(
    _from: Address,
    _to: Address,
    _amount: BigInt
  ): CallResult<boolean> {
    let result = super.tryCall("transferFrom", [
      EthereumValue.fromAddress(_from),
      EthereumValue.fromAddress(_to),
      EthereumValue.fromUnsignedBigInt(_amount)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", []);

    return result[0].toString();
  }

  try_name(): CallResult<string> {
    let result = super.tryCall("name", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  symbol(): string {
    let result = super.call("symbol", []);

    return result[0].toString();
  }

  try_symbol(): CallResult<string> {
    let result = super.tryCall("symbol", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toString());
  }

  decimals(): i32 {
    let result = super.call("decimals", []);

    return result[0].toI32();
  }

  try_decimals(): CallResult<i32> {
    let result = super.tryCall("decimals", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toI32());
  }

  getNewCurrentVariables(): Contract__getNewCurrentVariablesResult {
    let result = super.call("getNewCurrentVariables", []);

    return new Contract__getNewCurrentVariablesResult(
      result[0].toBytes(),
      result[1].toBigIntArray(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getNewCurrentVariables(): CallResult<
    Contract__getNewCurrentVariablesResult
  > {
    let result = super.tryCall("getNewCurrentVariables", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Contract__getNewCurrentVariablesResult(
        value[0].toBytes(),
        value[1].toBigIntArray(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getTopRequestIDs(): Array<BigInt> {
    let result = super.call("getTopRequestIDs", []);

    return result[0].toBigIntArray();
  }

  try_getTopRequestIDs(): CallResult<Array<BigInt>> {
    let result = super.tryCall("getTopRequestIDs", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toBigIntArray());
  }

  getNewVariablesOnDeck(): Contract__getNewVariablesOnDeckResult {
    let result = super.call("getNewVariablesOnDeck", []);

    return new Contract__getNewVariablesOnDeckResult(
      result[0].toBigIntArray(),
      result[1].toBigIntArray()
    );
  }

  try_getNewVariablesOnDeck(): CallResult<
    Contract__getNewVariablesOnDeckResult
  > {
    let result = super.tryCall("getNewVariablesOnDeck", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(
      new Contract__getNewVariablesOnDeckResult(
        value[0].toBigIntArray(),
        value[1].toBigIntArray()
      )
    );
  }
}

export class BeginDisputeCall extends EthereumCall {
  get inputs(): BeginDisputeCall__Inputs {
    return new BeginDisputeCall__Inputs(this);
  }

  get outputs(): BeginDisputeCall__Outputs {
    return new BeginDisputeCall__Outputs(this);
  }
}

export class BeginDisputeCall__Inputs {
  _call: BeginDisputeCall;

  constructor(call: BeginDisputeCall) {
    this._call = call;
  }

  get _requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minerIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BeginDisputeCall__Outputs {
  _call: BeginDisputeCall;

  constructor(call: BeginDisputeCall) {
    this._call = call;
  }
}

export class VoteCall extends EthereumCall {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _supportsDispute(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}

export class TallyVotesCall extends EthereumCall {
  get inputs(): TallyVotesCall__Inputs {
    return new TallyVotesCall__Inputs(this);
  }

  get outputs(): TallyVotesCall__Outputs {
    return new TallyVotesCall__Outputs(this);
  }
}

export class TallyVotesCall__Inputs {
  _call: TallyVotesCall;

  constructor(call: TallyVotesCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TallyVotesCall__Outputs {
  _call: TallyVotesCall;

  constructor(call: TallyVotesCall) {
    this._call = call;
  }
}

export class ProposeForkCall extends EthereumCall {
  get inputs(): ProposeForkCall__Inputs {
    return new ProposeForkCall__Inputs(this);
  }

  get outputs(): ProposeForkCall__Outputs {
    return new ProposeForkCall__Outputs(this);
  }
}

export class ProposeForkCall__Inputs {
  _call: ProposeForkCall;

  constructor(call: ProposeForkCall) {
    this._call = call;
  }

  get _propNewTellorAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProposeForkCall__Outputs {
  _call: ProposeForkCall;

  constructor(call: ProposeForkCall) {
    this._call = call;
  }
}

export class AddTipCall extends EthereumCall {
  get inputs(): AddTipCall__Inputs {
    return new AddTipCall__Inputs(this);
  }

  get outputs(): AddTipCall__Outputs {
    return new AddTipCall__Outputs(this);
  }
}

export class AddTipCall__Inputs {
  _call: AddTipCall;

  constructor(call: AddTipCall) {
    this._call = call;
  }

  get _requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tip(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddTipCall__Outputs {
  _call: AddTipCall;

  constructor(call: AddTipCall) {
    this._call = call;
  }
}

export class SubmitMiningSolutionCall extends EthereumCall {
  get inputs(): SubmitMiningSolutionCall__Inputs {
    return new SubmitMiningSolutionCall__Inputs(this);
  }

  get outputs(): SubmitMiningSolutionCall__Outputs {
    return new SubmitMiningSolutionCall__Outputs(this);
  }
}

export class SubmitMiningSolutionCall__Inputs {
  _call: SubmitMiningSolutionCall;

  constructor(call: SubmitMiningSolutionCall) {
    this._call = call;
  }

  get _nonce(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _requestId(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _value(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SubmitMiningSolutionCall__Outputs {
  _call: SubmitMiningSolutionCall;

  constructor(call: SubmitMiningSolutionCall) {
    this._call = call;
  }
}

export class SubmitMiningSolution1Call extends EthereumCall {
  get inputs(): SubmitMiningSolution1Call__Inputs {
    return new SubmitMiningSolution1Call__Inputs(this);
  }

  get outputs(): SubmitMiningSolution1Call__Outputs {
    return new SubmitMiningSolution1Call__Outputs(this);
  }
}

export class SubmitMiningSolution1Call__Inputs {
  _call: SubmitMiningSolution1Call;

  constructor(call: SubmitMiningSolution1Call) {
    this._call = call;
  }

  get _nonce(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _requestId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SubmitMiningSolution1Call__Outputs {
  _call: SubmitMiningSolution1Call;

  constructor(call: SubmitMiningSolution1Call) {
    this._call = call;
  }
}

export class ProposeOwnershipCall extends EthereumCall {
  get inputs(): ProposeOwnershipCall__Inputs {
    return new ProposeOwnershipCall__Inputs(this);
  }

  get outputs(): ProposeOwnershipCall__Outputs {
    return new ProposeOwnershipCall__Outputs(this);
  }
}

export class ProposeOwnershipCall__Inputs {
  _call: ProposeOwnershipCall;

  constructor(call: ProposeOwnershipCall) {
    this._call = call;
  }

  get _pendingOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProposeOwnershipCall__Outputs {
  _call: ProposeOwnershipCall;

  constructor(call: ProposeOwnershipCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall extends EthereumCall {
  get inputs(): ClaimOwnershipCall__Inputs {
    return new ClaimOwnershipCall__Inputs(this);
  }

  get outputs(): ClaimOwnershipCall__Outputs {
    return new ClaimOwnershipCall__Outputs(this);
  }
}

export class ClaimOwnershipCall__Inputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall__Outputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class DepositStakeCall extends EthereumCall {
  get inputs(): DepositStakeCall__Inputs {
    return new DepositStakeCall__Inputs(this);
  }

  get outputs(): DepositStakeCall__Outputs {
    return new DepositStakeCall__Outputs(this);
  }
}

export class DepositStakeCall__Inputs {
  _call: DepositStakeCall;

  constructor(call: DepositStakeCall) {
    this._call = call;
  }
}

export class DepositStakeCall__Outputs {
  _call: DepositStakeCall;

  constructor(call: DepositStakeCall) {
    this._call = call;
  }
}

export class RequestStakingWithdrawCall extends EthereumCall {
  get inputs(): RequestStakingWithdrawCall__Inputs {
    return new RequestStakingWithdrawCall__Inputs(this);
  }

  get outputs(): RequestStakingWithdrawCall__Outputs {
    return new RequestStakingWithdrawCall__Outputs(this);
  }
}

export class RequestStakingWithdrawCall__Inputs {
  _call: RequestStakingWithdrawCall;

  constructor(call: RequestStakingWithdrawCall) {
    this._call = call;
  }
}

export class RequestStakingWithdrawCall__Outputs {
  _call: RequestStakingWithdrawCall;

  constructor(call: RequestStakingWithdrawCall) {
    this._call = call;
  }
}

export class WithdrawStakeCall extends EthereumCall {
  get inputs(): WithdrawStakeCall__Inputs {
    return new WithdrawStakeCall__Inputs(this);
  }

  get outputs(): WithdrawStakeCall__Outputs {
    return new WithdrawStakeCall__Outputs(this);
  }
}

export class WithdrawStakeCall__Inputs {
  _call: WithdrawStakeCall;

  constructor(call: WithdrawStakeCall) {
    this._call = call;
  }
}

export class WithdrawStakeCall__Outputs {
  _call: WithdrawStakeCall;

  constructor(call: WithdrawStakeCall) {
    this._call = call;
  }
}

export class ApproveCall extends EthereumCall {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferCall extends EthereumCall {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends EthereumCall {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateTellorCall extends EthereumCall {
  get inputs(): UpdateTellorCall__Inputs {
    return new UpdateTellorCall__Inputs(this);
  }

  get outputs(): UpdateTellorCall__Outputs {
    return new UpdateTellorCall__Outputs(this);
  }
}

export class UpdateTellorCall__Inputs {
  _call: UpdateTellorCall;

  constructor(call: UpdateTellorCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateTellorCall__Outputs {
  _call: UpdateTellorCall;

  constructor(call: UpdateTellorCall) {
    this._call = call;
  }
}

export class UnlockDisputeFeeCall extends EthereumCall {
  get inputs(): UnlockDisputeFeeCall__Inputs {
    return new UnlockDisputeFeeCall__Inputs(this);
  }

  get outputs(): UnlockDisputeFeeCall__Outputs {
    return new UnlockDisputeFeeCall__Outputs(this);
  }
}

export class UnlockDisputeFeeCall__Inputs {
  _call: UnlockDisputeFeeCall;

  constructor(call: UnlockDisputeFeeCall) {
    this._call = call;
  }

  get _disputeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnlockDisputeFeeCall__Outputs {
  _call: UnlockDisputeFeeCall;

  constructor(call: UnlockDisputeFeeCall) {
    this._call = call;
  }
}
